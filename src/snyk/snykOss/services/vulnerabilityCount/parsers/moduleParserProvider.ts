import { Language } from '../../../../common/types';
import { BabelParser } from './babelParser';
import { HtmlParser } from './htmlParser';
import { ModuleParser } from './moduleParser';
import { PackageJsonParser } from './packageJsonParser';

export class ModuleParserProvider {
  static getInstance(language: Language): ModuleParser | undefined {
    if ([Language.TypeScript, Language.JavaScript].includes(language)) {
      return new BabelParser();
    } else if (language === Language.PJSON) {
      return new PackageJsonParser();
    } else if (language === Language.HTML) {
      return new HtmlParser();
    }

    return undefined;
  }
}
